[{"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\index.js":"1","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\reportWebVitals.js":"2","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppWrapper.js":"3","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\App.js":"4","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\Login.js":"5","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\NotFound.js":"6","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppBreadcrumb.js":"7","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppConfig.js":"8","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppTopbar.js":"9","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppInlineProfile.js":"10","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppFooter.js":"11","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppMenu.js":"12","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\Cases.js":"13","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\Dashboard.js":"14","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\Clients.js":"15","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\SystemUsers.js":"16","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\Roles.js":"17","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\MenuDemo.js":"18","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\ViewCase.js":"19","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\components\\menu\\CaseDemo.js":"20","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\components\\menu\\PersonalDemo.js":"21","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\components\\menu\\ConfirmationDemo.js":"22","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\components\\menu\\PaymentDemo.js":"23","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\components\\menu\\SeatDemo.js":"24","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\InformationBank.js":"25","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\LogOut.js":"26","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\AnimalChart.js":"27"},{"size":666,"mtime":1695215580970,"results":"28","hashOfConfig":"29"},{"size":419,"mtime":1695215580981,"results":"30","hashOfConfig":"29"},{"size":627,"mtime":1695215580959,"results":"31","hashOfConfig":"29"},{"size":14251,"mtime":1695738708071,"results":"32","hashOfConfig":"29"},{"size":3053,"mtime":1695730290359,"results":"33","hashOfConfig":"29"},{"size":602,"mtime":1695215580979,"results":"34","hashOfConfig":"29"},{"size":1028,"mtime":1695215580953,"results":"35","hashOfConfig":"29"},{"size":8272,"mtime":1695215580953,"results":"36","hashOfConfig":"29"},{"size":5106,"mtime":1695215580953,"results":"37","hashOfConfig":"29"},{"size":884,"mtime":1695215580953,"results":"38","hashOfConfig":"29"},{"size":1029,"mtime":1695215580953,"results":"39","hashOfConfig":"29"},{"size":6504,"mtime":1695215580953,"results":"40","hashOfConfig":"29"},{"size":14030,"mtime":1695215580974,"results":"41","hashOfConfig":"29"},{"size":991,"mtime":1695722535101,"results":"42","hashOfConfig":"29"},{"size":7993,"mtime":1695215580975,"results":"43","hashOfConfig":"29"},{"size":14696,"mtime":1695215580980,"results":"44","hashOfConfig":"29"},{"size":8681,"mtime":1695215580980,"results":"45","hashOfConfig":"29"},{"size":2688,"mtime":1695215580979,"results":"46","hashOfConfig":"29"},{"size":1969,"mtime":1695215580981,"results":"47","hashOfConfig":"29"},{"size":10064,"mtime":1695215580969,"results":"48","hashOfConfig":"29"},{"size":1303,"mtime":1695215580970,"results":"49","hashOfConfig":"29"},{"size":2590,"mtime":1695215580969,"results":"50","hashOfConfig":"29"},{"size":3616,"mtime":1695215580970,"results":"51","hashOfConfig":"29"},{"size":1919,"mtime":1695215580970,"results":"52","hashOfConfig":"29"},{"size":5193,"mtime":1695722527779,"results":"53","hashOfConfig":"29"},{"size":1271,"mtime":1695647822525,"results":"54","hashOfConfig":"29"},{"size":4087,"mtime":1695722551407,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1sks7rf",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"59"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"59"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"59"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"59"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"59"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"59"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\index.js",[],[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\reportWebVitals.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppWrapper.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\App.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161"],[],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { classNames } from 'primereact/utils';\r\nimport { Route, Routes, useNavigate, useLocation } from 'react-router-dom';\r\n\r\n\r\nimport AppTopbar from './AppTopbar';\r\nimport AppFooter from './AppFooter';\r\nimport AppConfig from './AppConfig';\r\nimport AppMenu from './AppMenu';\r\nimport AppBreadcrumb from './AppBreadcrumb';\r\nimport AppInlineProfile from './AppInlineProfile';\r\n\r\nimport Dashboard from './pages/Dashboard';\r\nimport Clients from './pages/Clients';\r\nimport Roles from './pages/Roles';\r\nimport Cases from './pages/Cases';\r\nimport Users from './pages/SystemUsers';\r\nimport PrimeReact from 'primereact/api';\r\nimport { Tooltip } from 'primereact/tooltip';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport 'primeicons/primeicons.css';\r\nimport 'primeflex/primeflex.css';\r\nimport './App.scss';\r\nimport SystemUsers from './pages/SystemUsers';\r\nimport MenuDemo from './pages/MenuDemo';\r\nimport ViewCase from './pages/ViewCase';\r\nimport CaseDemo from './components/menu/CaseDemo';\r\nimport InformationBank from './pages/InformationBank';\r\nimport { LogOut } from './pages/LogOut';\r\nimport AnimalChart from './pages/AnimalChart';\r\n\r\n\r\nconst App = () => {\r\n    const [menuActive, setMenuActive] = useState(false);\r\n    const [menuMode, setMenuMode] = useState('slim');\r\n    const [darkMenu, setDarkMenu] = useState(false);\r\n    const [overlayMenuActive, setOverlayMenuActive] = useState(false);\r\n    const [topbarMenuActive, setTopbarMenuActive] = useState(false);\r\n    const [staticMenuDesktopInactive, setStaticMenuDesktopInactive] = useState(false);\r\n    const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\r\n    const [activeTopbarItem, setActiveTopbarItem] = useState(null);\r\n    const [inlineMenuActive, setInlineMenuActive] = useState(false);\r\n    const [profileMode, setProfileMode] = useState('popup');\r\n    const [configActive, setConfigActive] = useState(false);\r\n    const [inputStyle, setInputStyle] = useState('outlined');\r\n    const [ripple, setRipple] = useState(false);\r\n    const copyTooltipRef = useRef();\r\n    const location = useLocation();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    let menuClick = false;\r\n    let configClick = false;\r\n    let topbarItemClick = false;\r\n    let inlineMenuClick = false;\r\n\r\n    const breadcrumb = [\r\n        { path: '/', parent: 'Dashboard', label: 'Dashboard' },\r\n        { path: '/InformationBank', parent: 'InformationBank', label: 'Information Bank' },\r\n        { path: '/LogOut', parent: 'LogOut', label: 'Log out' },\r\n        { path: '/AnimalChart', parent: 'AnimalChart', label: 'Family Tree' },\r\n        \r\n        //{ path: '/Users', parent: 'Users', label: 'Users' },\r\n        // { path: '/Clients', parent: 'Clients', label: 'Clients' },\r\n        // { path: '/Roles', parent: 'Roles', label: 'Roles' },\r\n        // { path: '/MenuDemo', parent: 'Clients', label: 'View Client' },\r\n        // { path: '/ViewCase', parent: 'ViewCase', label: 'View Case' },\r\n        // { path: '/SystemUsers', parent: 'SystemUsers', label: 'System Users' },\r\n        // { path: '/Cases', parent: 'Cases', label: 'Cases' },\r\n        // { path: '/menu', parent: 'UI Kit', label: 'Company Information' },\r\n        // { path: '/menu/seat', parent: 'UI Kit', label: 'Contact Person' },\r\n        // { path: '/menu/payment', parent: 'UI Kit', label: 'Product Lines' },\r\n        // { path: '/menu/confirmation', parent: 'UI Kit', label: 'Communications' },\r\n        // { path: '/menu/case', parent: 'UI Kit', label: 'Cases' },\r\n    ];\r\n\r\n    const menu = [\r\n        {\r\n            label: 'Home Page',\r\n            icon: 'pi pi-fw pi-home',\r\n            items: [{ label: 'Dashboard', icon: 'pi pi-fw pi-home', to: '/' }]\r\n        },\r\n        {\r\n            label: 'Information Bank',\r\n            icon: 'pi pi-fw pi-bars',\r\n            items: [{ label: 'Information Bank', icon: 'pi pi-fw pi-bars', to: '/InformationBank' }]\r\n        },\r\n        {\r\n            label: 'Family Tree',\r\n            icon: 'pi pi-fw pi-bars',\r\n            items: [{ label: 'Family Tree', icon: 'pi pi-fw pi-bars', to: '/AnimalChart' }]\r\n        },\r\n        {\r\n            label: 'LogOut',\r\n            icon: 'pi pi-fw pi-sign-out',\r\n            items: [{ label: 'Log out', icon: 'pi pi-fw pi-sign-out', to: '/Login' }]\r\n        }\r\n       \r\n        // {\r\n        //     label: 'Accounts',\r\n        //     icon: 'pi pi-fw pi-user',\r\n        //     items: [\r\n        //     { label: 'Clients', icon: 'pi pi-fw pi-shopping-cart', to: '/Clients' },\r\n        //     { label: 'System Users', icon: 'pi pi-fw pi-credit-card', to: '/SystemUsers' },\r\n        // ]\r\n        // },\r\n        // {\r\n        //     label: 'Client Support',\r\n        //     icon: 'pi pi-fw pi-shield',\r\n        //     items: [\r\n        //         { label: 'Cases', icon: 'pi pi-fw pi-sign-in', to: '/Cases' },\r\n        //     ]\r\n        // },\r\n        // {\r\n        //     label: 'System Settings',\r\n        //     icon: 'pi pi-fw pi-cog',\r\n        //     items: [\r\n        //       { label: 'Roles', icon: 'pi pi-fw pi-list', to: '/Roles' },\r\n        //     ]\r\n        // },\r\n       \r\n       \r\n    ];\r\n\r\n    useEffect(() => {\r\n        copyTooltipRef && copyTooltipRef.current && copyTooltipRef.current.updateTargetEvents();\r\n    }, [location]);\r\n\r\n    let meta = breadcrumb.find((obj) => {\r\n        return obj.path === location.pathname;\r\n    });\r\n\r\n    const onInputStyleChange = (inputStyle) => {\r\n        setInputStyle(inputStyle);\r\n    };\r\n\r\n    const onRippleChange = (e) => {\r\n        PrimeReact.ripple = e.value;\r\n        setRipple(e.value);\r\n    };\r\n\r\n    const onMenuModeChange = (e) => {\r\n        setMenuMode(e.value);\r\n        setStaticMenuDesktopInactive(false);\r\n        setOverlayMenuActive(false);\r\n\r\n        if (e.value === 'horizontal') {\r\n            setProfileMode('popup');\r\n        }\r\n    };\r\n\r\n    const onMenuColorChange = (e) => {\r\n        setDarkMenu(e.value);\r\n    };\r\n\r\n    const onProfileChange = (e) => {\r\n        setProfileMode(e.value);\r\n    };\r\n\r\n    const onDocumentClick = () => {\r\n        if (!topbarItemClick) {\r\n            setActiveTopbarItem(null);\r\n            setTopbarMenuActive(false);\r\n        }\r\n\r\n        if (!menuClick) {\r\n            if (isHorizontal() || isSlim()) {\r\n                setMenuActive(false);\r\n            }\r\n            hideOverlayMenu();\r\n        }\r\n\r\n        if (!inlineMenuClick && profileMode === 'inline' && isSlim() && !isMobile()) {\r\n            setInlineMenuActive(false);\r\n        }\r\n\r\n        if (configActive && !configClick) {\r\n            setConfigActive(false);\r\n        }\r\n\r\n        inlineMenuClick = false;\r\n        configClick = false;\r\n        topbarItemClick = false;\r\n        menuClick = false;\r\n    };\r\n\r\n    const onMenuitemClick = (event) => {\r\n        if (!event.item.items) {\r\n            hideOverlayMenu();\r\n\r\n            if (isSlim() || isHorizontal()) {\r\n                setMenuActive(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const onRootMenuitemClick = () => {\r\n        setMenuActive((prevMenuActive) => !prevMenuActive);\r\n    };\r\n\r\n    const onMenuClick = () => {\r\n        menuClick = true;\r\n\r\n        if (inlineMenuActive && !inlineMenuClick) {\r\n            setInlineMenuActive(false);\r\n        }\r\n    };\r\n\r\n    const isMenuVisible = () => {\r\n        if (isDesktop()) {\r\n            if (menuMode === 'static') return !staticMenuDesktopInactive;\r\n            else if (menuMode === 'overlay') return overlayMenuActive;\r\n            else return true;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    const onMenuButtonClick = (event) => {\r\n        menuClick = true;\r\n        setTopbarMenuActive(false);\r\n\r\n        if (isOverlay() && !isMobile()) {\r\n            setOverlayMenuActive((prevOverlayMenuActive) => !prevOverlayMenuActive);\r\n        } else {\r\n            if (isDesktop()) {\r\n                setStaticMenuDesktopInactive((prevStaticMenuDesktopInactive) => !prevStaticMenuDesktopInactive);\r\n            } else {\r\n                setStaticMenuMobileActive((prevStaticMenuMobileActive) => !prevStaticMenuMobileActive);\r\n            }\r\n        }\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    const onProfileButtonClick = (event) => {\r\n        setInlineMenuActive((prevInlineMenuActive) => !prevInlineMenuActive);\r\n        inlineMenuClick = true;\r\n\r\n        if (isSlim() || isHorizontal()) {\r\n            setMenuActive(false);\r\n        }\r\n    };\r\n\r\n    const onTopbarMenuButtonClick = (event) => {\r\n        topbarItemClick = true;\r\n        setTopbarMenuActive((prevTopbarMenuActive) => !prevTopbarMenuActive);\r\n\r\n        hideOverlayMenu();\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    const onTopbarItemClick = (event, item) => {\r\n        topbarItemClick = true;\r\n\r\n        if (activeTopbarItem === item) {\r\n            setActiveTopbarItem(null);\r\n        } else {\r\n            setActiveTopbarItem(item);\r\n        }\r\n\r\n        event.preventDefault();\r\n    };\r\n\r\n    const onConfigClick = () => {\r\n        configClick = true;\r\n    };\r\n\r\n    const onConfigButtonClick = () => {\r\n        setConfigActive((prevConfigActive) => !prevConfigActive);\r\n        configClick = true;\r\n    };\r\n\r\n    const hideOverlayMenu = () => {\r\n        setOverlayMenuActive(false);\r\n        setStaticMenuMobileActive(false);\r\n    };\r\n\r\n    const isDesktop = () => {\r\n        return window.innerWidth > 896;\r\n    };\r\n\r\n    const isMobile = () => {\r\n        return window.innerWidth <= 896;\r\n    };\r\n\r\n    const isOverlay = () => {\r\n        return menuMode === 'overlay';\r\n    };\r\n\r\n    const isHorizontal = () => {\r\n        return menuMode === 'horizontal';\r\n    };\r\n\r\n    const isSlim = () => {\r\n        return menuMode === 'slim';\r\n    };\r\n\r\n    const isStatic = () => {\r\n        return menuMode === 'static';\r\n    };\r\n\r\n    const hasInlineProfile = profileMode === 'inline' && !isHorizontal();\r\n\r\n    const containerClassName = classNames('layout-wrapper', {\r\n        'layout-static': isStatic(),\r\n        'layout-overlay': isOverlay(),\r\n        'layout-overlay-active': overlayMenuActive,\r\n        'layout-horizontal': isHorizontal(),\r\n        'layout-slim': isSlim(),\r\n        'layout-static-inactive': staticMenuDesktopInactive,\r\n        'layout-mobile-active': staticMenuMobileActive,\r\n        'layout-menu-dark': darkMenu,\r\n        'layout-menu-light': !darkMenu,\r\n        'p-input-filled': inputStyle === 'filled',\r\n        'p-ripple-disabled': !ripple\r\n    });\r\n\r\n    const menuContainerClassName = classNames('layout-menu-container', { 'layout-menu-container-inactive': !isMenuVisible() });\r\n\r\n    return (\r\n        <div className={containerClassName} onClick={onDocumentClick}>\r\n            <Tooltip ref={copyTooltipRef} target=\".block-action-copy\" position=\"bottom\" content=\"Copied to clipboard\" event=\"focus\" />\r\n\r\n            <AppTopbar\r\n                // topbarMenuActive={topbarMenuActive}\r\n                // activeTopbarItem={activeTopbarItem}\r\n                // onMenuButtonClick={onMenuButtonClick}\r\n                // onTopbarMenuButtonClick={onTopbarMenuButtonClick}\r\n                // onTopbarItemClick={onTopbarItemClick}\r\n                // isHorizontal={isHorizontal()}\r\n                // profileMode={profileMode}\r\n                isMobile={isMobile}\r\n                \r\n            />\r\n            \r\n\r\n            <div className={menuContainerClassName} onClick={onMenuClick}>\r\n                <div className=\"layout-menu-logo\">\r\n                    <button className=\"p-link\" onClick={() => navigate('/')}>                        \r\n                        <img id=\"layout-menu-logo\" src=\"assets/layout/images/logo-white.png\" style={{height: '70%'}} library=\"babylon-layout\" alt=\"babylon-logo\" />\r\n                    </button>\r\n                </div>\r\n                <div className=\"layout-menu-wrapper\">\r\n                    <div className=\"menu-scroll-content\">\r\n                        {hasInlineProfile && <AppInlineProfile inlineMenuActive={inlineMenuActive} onProfileButtonClick={onProfileButtonClick} />}\r\n                        <AppMenu model={menu} menuMode={menuMode} active={menuActive} onMenuitemClick={onMenuitemClick} onRootMenuitemClick={onRootMenuitemClick} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"layout-main\">\r\n                {/* <AppBreadcrumb meta={meta} /> */}\r\n\r\n                <div className=\"layout-content\">\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<Dashboard />} />\r\n                        <Route path=\"/InformationBank\" element={<InformationBank />} />\r\n                        <Route path=\"/LogOut\" element={<LogOut />} />\r\n                        <Route path=\"/AnimalChart\" element={<AnimalChart />} />\r\n                       \r\n                    {/* <Route path=\"/Users\" element={<Users />} />\r\n                        <Route path=\"/Clients\" element={<Clients />} />\r\n                        <Route path=\"/Cases\" element={<Cases />} />\r\n                        <Route path=\"/SystemUsers\" element={<SystemUsers />} />\r\n                        <Route path=\"/Roles\" element={<Roles />} />                       \r\n                        <Route path=\"/menu/*\" element={<MenuDemo />} /> \r\n                        <Route path=\"/ViewCase\" element={<ViewCase />} />                        */}\r\n                    </Routes>\r\n                </div>\r\n\r\n                <AppFooter />\r\n            </div>\r\n\r\n            <AppConfig\r\n                configActive={configActive}\r\n                menuMode={menuMode}\r\n                onMenuModeChange={onMenuModeChange}\r\n                isDarkMenu={darkMenu}\r\n                onMenuColorChange={onMenuColorChange}\r\n                profileMode={profileMode}\r\n                onProfileChange={onProfileChange}\r\n                onConfigClick={onConfigClick}\r\n                onConfigButtonClick={onConfigButtonClick}\r\n                rippleActive={ripple}\r\n                onRippleChange={onRippleChange}\r\n                inputStyle={inputStyle}\r\n                onInputStyleChange={onInputStyleChange}\r\n            ></AppConfig>\r\n\r\n            {staticMenuMobileActive && <div className=\"layout-mask\"></div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\Login.js",["162","163"],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\NotFound.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppBreadcrumb.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppConfig.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppTopbar.js",["164"],[],"import React from 'react';\r\nimport { classNames } from 'primereact/utils';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst AppTopbar = (props) => {\r\n    const navigate = useNavigate();\r\n    const topbarMenuClassName = classNames('topbar-menu fadeInDown', { 'topbar-menu-visible': props.topbarMenuActive });\r\n    const profileItemClassName = classNames('user-profile', { 'active-topmenuitem': props.activeTopbarItem === 'profile' });\r\n    const activeTopbarItemClassName = (name) => {\r\n        return name === props.activeTopbarItem ? 'active-topmenuitem' : null;\r\n    };\r\n\r\n    const isProfilePopup = props.profileMode === 'popup' || props.isHorizontal;\r\n\r\n    return (\r\n        <div className=\"layout-topbar\">\r\n            {/* <button className=\"layout-topbar-logo p-link\" onClick={() => navigate('/')}>\r\n                <img id=\"layout-topbar-logo\" src=\"assets/layout/images/ernu-black.png\" alt=\"babylon-layout\" />\r\n            </button> */}\r\n\r\n            <button className=\"layout-menu-button p-link\" onClick={props.onMenuButtonClick}>\r\n                <i className=\"pi pi-bars\"></i>\r\n            </button>\r\n\r\n            <button id=\"topbar-menu-button\" className=\"p-link\" onClick={props.onTopbarMenuButtonClick}>\r\n                <i className=\"pi pi-ellipsis-v\"></i>\r\n            </button>\r\n\r\n            <ul className={topbarMenuClassName}>\r\n                {isProfilePopup && (\r\n                    <li className={profileItemClassName}>\r\n                        <button className=\"p-link\" onClick={(e) => props.onTopbarItemClick(e, 'profile')}>                        \r\n                            <img alt=\"babylon-layout\" src=\"assets/layout/images/avatar.png\" />                            \r\n                            <span className=\"topbar-item-name\">Arlene Welch</span>                           \r\n                        </button>\r\n                        \r\n\r\n                        <ul className={classNames({ fadeInDown: !props.isMobile() })}>\r\n                            <li role=\"menuitem\">\r\n                                <button className=\"p-link\">\r\n                                    <i className=\"pi pi-user\"></i>\r\n                                    <span>Profile</span>\r\n                                </button>\r\n                            </li>\r\n                            <li role=\"menuitem\">\r\n                                <button className=\"p-link\">\r\n                                    <i className=\"pi pi-bell\"></i>\r\n                                    <span>Notifications</span>\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                )}\r\n                \r\n                <li className={activeTopbarItemClassName('messages')}>\r\n                    <button className=\"p-link\" onClick={(e) => props.onTopbarItemClick(e, 'messages')}>\r\n                        <i className=\"topbar-icon pi pi-bell\"></i>\r\n                        <span className=\"topbar-item-name\">Messages</span>\r\n                        <span className=\"topbar-badge\">8</span>\r\n                    </button>\r\n                    <ul className={classNames({ fadeInDown: !props.isMobile() })}>\r\n                        <li role=\"menuitem\">\r\n                            <button className=\"topbar-message p-link\">\r\n                                <img src=\"assets/layout/images/avatar-john.png\" alt=\"babylon-layout\" />\r\n                                <span>Give me a call</span>\r\n                            </button>\r\n                        </li>\r\n                        <li role=\"menuitem\">\r\n                            <button className=\"topbar-message p-link\">\r\n                                <img src=\"assets/layout/images/avatar-julia.png\" alt=\"babylon-layout\" />\r\n                                <span>Reports attached</span>\r\n                            </button>\r\n                        </li>\r\n                        <li role=\"menuitem\">\r\n                            <button className=\"topbar-message p-link\">\r\n                                <img src=\"assets/layout/images/avatar-kevin.png\" alt=\"babylon-layout\" />\r\n                                <span>About your invoice</span>\r\n                            </button>\r\n                        </li>\r\n                        <li role=\"menuitem\">\r\n                            <button className=\"topbar-message p-link\">\r\n                                <img src=\"assets/layout/images/avatar-julia.png\" alt=\"babylon-layout\" />\r\n                                <span>Meeting today</span>\r\n                            </button>\r\n                        </li>\r\n                        <li role=\"menuitem\">\r\n                            <button className=\"topbar-message p-link\">\r\n                                <img src=\"assets/layout/images/avatar.png\" alt=\"babylon-layout\" />\r\n                                <span>Out of office</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppTopbar;\r\n","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppInlineProfile.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppFooter.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\AppMenu.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\Cases.js",["165","166"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport data from '../assets/cases.json';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nconst Cases = () => {\r\n\r\n    const [displayBasic, setDisplayBasic] = useState(false);\r\n    const [display, setDisplay] = useState(false);\r\n    const [basic, setBasic] = useState(false);\r\n    const [dropdownItem, setDropdownItem] = useState(null);\r\n    const dropdownItems = [\r\n        { name: 'Male', code: 'option 1' },\r\n        { name: 'Female', code: 'option 2' }\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"layout-dashboard\" >\r\n\r\n\r\n\r\n            <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                    <div className=\"grid p-fluid\" style={{ justifyContent: 'flex-end' }}>\r\n\r\n\r\n                        <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                            <Button label=\"New Case Type\" icon=\"pi pi-plus\" className=\"mr-2 mb-2\" style={{ backgroundColor: ' deep purple' }} onClick={() => setDisplayBasic(true)}></Button>\r\n                        </div>\r\n                        <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                            <Button type=\"button\" label=\"Export\" icon=\"pi pi-arrow-circle-up\" style={{ backgroundColor: 'deep purple' }} />\r\n                        </div>\r\n                        <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                            <Link to=\"/\"> <Button label=\"Back\" icon=\"pi pi-chevron-left\" style={{ backgroundColor: 'deep purple' }} className=\"mr-2 mb-2\" ></Button></Link>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"flex justify-content-around flex-wrap card-container indigo-container\" style={{ backgroundColor: 'white' }}>\r\n                <div className=\"col-12 lg:col-6 xl:col-6\"  >\r\n                    <div style={{ width: '250%' }}>\r\n                        <InputText id=\"firstname1\" type=\"text\" placeholder=\"Enter any information about a case\" style={{ width: '40%' }} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button label=\"Search\" icon=\"pi pi-search\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'deep purple' }} ></Button>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button label=\"New Case\" icon=\"pi pi-plus\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'deep purple' }} onClick={() => setDisplay(true)} ></Button>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button label=\"New Case Note\" icon=\"pi pi-plus\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'deep purple' }} onClick={() => setBasic(true)} ></Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                <Dialog header=\"New Case Type\" visible={displayBasic} style={{ width: '60vw' }} onHide={() => setDisplayBasic(false)}  >\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"p-fluid formgrid grid\">\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Name</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Code</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-12\">\r\n                                    <label htmlFor=\"firstname2\">Description</label>\r\n                                    <textarea id=\"address\" type=\"text\" rows=\"4\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"></textarea>\r\n                                </div>\r\n\r\n                               \r\n                            </div>\r\n                        </div>\r\n                        <div class=\"flex justify-content-center \" >\r\n                                    <div className=\"field col-12 md:col-6\" >\r\n                                        <Button label=\"Save\" icon=\"pi pi-save\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'green', borderBlockColor: 'green' }}></Button>\r\n                                    </div>\r\n                                    <div className=\"field col-12 md:col-6\" >\r\n                                        <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'red', borderBlockColor: 'red' }}></Button>\r\n                                    </div>\r\n                                </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div >\r\n            <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                <Dialog header=\"New Case Note\" visible={basic} style={{ width: '60vw' }} onHide={() => setDisplayBasic(false)}  >\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"p-fluid formgrid grid\">\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Case Name</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Status</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" placeholder=\"Select One\"></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12\">\r\n                                    <label htmlFor=\"firstname2\">Description</label>\r\n                                    <textarea id=\"address\" type=\"text\" rows=\"4\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"></textarea>\r\n                                </div>\r\n                               \r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"flex justify-content-center \" >\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Save\" icon=\"pi pi-save\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'green', borderBlockColor: 'green' }}></Button>\r\n                            </div>\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'red', borderBlockColor: 'red' }}></Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div >\r\n            <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                <Dialog header=\"New Case \" visible={display} style={{ width: '60vw' }} onHide={() => setDisplay(false)}  >\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"p-fluid formgrid grid\">\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Case Number</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Subject</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-12\">\r\n                                    <label htmlFor=\"firstname2\">Description</label>\r\n                                    <textarea id=\"address\" type=\"text\" rows=\"4\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"></textarea>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Case Type</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Assigned To</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Escalated To</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Status</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\"></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Case Origin</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Reported by</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6\">\r\n                                    <label htmlFor=\"state\">Client Account</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-6\">\r\n                                    <label htmlFor=\"firstname2\">Contact Person</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"flex justify-content-center \" >\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Save\" icon=\"pi pi-save\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'green', borderBlockColor: 'green' }}></Button>\r\n                            </div>\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'red', borderBlockColor: 'red' }}></Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div >\r\n            <div className=\"grid\" style={{ justifyContent: 'space-evenly' }}>\r\n                <div className=\"col-12 xl:col-12\">\r\n                    <div className=\"card card-w-title global-sales\" >\r\n                        <DataTable value={data} paginator rows={5} className=\"p-datatable-products\">\r\n                            <Column field=\"case_number\" header=\"Case No.\" ></Column>\r\n                            <Column field=\"subject\" header=\"Subject\" ></Column>\r\n                            <Column field=\"description\" header=\"Description\" ></Column>\r\n                            <Column field=\"type\" header=\"Case Type\" ></Column>\r\n                            <Column field=\"account\" header=\"Client Account\" ></Column>\r\n                            <Column field=\"status\" header=\"Status\" ></Column>\r\n                            <Column field=\"priority\" header=\"Priority\" ></Column>\r\n                            <Column field=\"options\" header=\"Actions\" body={<><Link to={\"/ViewCase\"} style={{ color: 'green' }}>View</Link><p></p></>} >\r\n\r\n                            </Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\nexport default Cases;","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\Dashboard.js",["167","168","169"],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\Clients.js",["170","171","172"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport data from '../assets/flags/clients.json';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport MenuDemo from './MenuDemo';\r\n\r\nconst Clients = () => {\r\n    const [displayBasic, setDisplayBasic] = useState(false);\r\n    const [dropdownItem, setDropdownItem] = useState(null);\r\n    const dropdownItems = [\r\n        { name: 'Male', code: 'option 1' },\r\n        { name: 'Female', code: 'option 2' }\r\n    ];\r\n    return (\r\n\r\n        <div className=\"layout-dashboard\" >\r\n            <div className=\"col-12 lg:col-6 xl:col-2\" style={{ marginLeft: '90%' }}>\r\n                <Link to=\"/\"> <Button className='button-success' label=\"Back\" icon=\"pi pi-chevron-left\" style={{ backgroundColor: 'deep purple' }}  ></Button></Link>\r\n            </div>\r\n            <div className=\"grid\" style={{ backgroundColor: 'white', marginBottom: '2%' }} >\r\n                <div className=\"col-12 lg:col-6 xl:col-6\"  >\r\n                    <div style={{ width: '250%' }}>\r\n                        <InputText id=\"firstname1\" type=\"text\" placeholder=\"Enter any information about a client\" style={{ width: '40%' }} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button label=\"Search\" icon=\"pi pi-search\" className=\"mr-2 mb-2\" ></Button>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button label=\"New Client\" icon=\"pi pi-plus\" className=\"mr-2 mb-2\" onClick={() => setDisplayBasic(true)}>\r\n\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n\r\n                <Dialog header=\"New Client\" visible={displayBasic} style={{ width: '60vw' }} onHide={() => setDisplayBasic(false)}>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"p-fluid formgrid grid\">\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Company Name</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Category</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-6\">\r\n                                    <label htmlFor=\"firstname2\">Company Location</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-6\">\r\n                                    <label htmlFor=\"firstname2\">Company Email Address</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-6\">\r\n                                    <label htmlFor=\"firstname2\">Telephone Number</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Products</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Sources</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-6\">\r\n                                    <label htmlFor=\"firstname2\">Contact Person Name</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-6\">\r\n                                    <label htmlFor=\"firstname2\">Contact Person Phone</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-6\">\r\n                                    <label htmlFor=\"firstname2\">Contact Person Email </label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Assignee</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"flex justify-content-center \" >\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Save\" icon=\"pi pi-save\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'green', borderBlockColor: 'green' }}></Button>\r\n                            </div>\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'red', borderBlockColor: 'red' }}></Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n\r\n            </div>\r\n\r\n            <div className=\"grid\" style={{ justifyContent: 'space-evenly' }}>\r\n                <div className=\"col-12 xl:col-12\">\r\n                    <div className=\"card card-w-title global-sales\" >\r\n                        <DataTable value={data} paginator rows={5} className=\"p-datatable-products\">\r\n                            <Column field=\"id\" header=\"ID\" ></Column>\r\n                            <Column field=\"companyName\" header=\"Company Name\" ></Column>\r\n                            <Column field=\"contact_person\" header=\"Contact Person\" ></Column>\r\n                            <Column field=\"companyLocation\" header=\"Company Location\" ></Column>\r\n                            <Column field=\"phone_number\" header=\"Phone Number\" ></Column>\r\n                            <Column field=\"companyEmail\" header=\"Company Email Address\" ></Column>\r\n                            <Column field=\"addedBy\" header=\"Added By\" ></Column>\r\n                            <Column field=\"source\" header=\"Source\" ></Column>\r\n                            <Column field=\"options\" header=\"Options\"\r\n                                body={<>\r\n                                    <Link to={\"/menu\"} style={{ color: 'green' }}><p>Manage Client</p> </Link>\r\n                                </>} >\r\n\r\n                            </Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Clients;","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\SystemUsers.js",["173"],[],"import { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport React, { useRef, useState } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport data from '../assets/flags/systemusers.json';\r\nimport { Sidebar } from 'primereact/sidebar';\r\nimport { confirmPopup } from 'primereact/confirmpopup';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Checkbox } from 'primereact/checkbox';\r\n\r\nfunction SystemUsers() {\r\n\r\n    const [displayBasic, setDisplayBasic] = useState(false);\r\n    const [checkboxValue, setCheckboxValue] = useState([]);\r\n    const [displayConfirmation, setDisplayConfirmation] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const onCheckboxChange = (e) => {\r\n        let selectedValue = [...checkboxValue];\r\n        if (e.checked) selectedValue.push(e.value);\r\n        else selectedValue.splice(selectedValue.indexOf(e.value), 1);\r\n\r\n        setCheckboxValue(selectedValue);\r\n    };\r\n    const confirmationDialogFooter = (\r\n        <>\r\n            <Button type=\"button\" label=\"No\" icon=\"pi pi-times\" onClick={() => setDisplayConfirmation(false)} className=\"p-button-text\" />\r\n            <Button type=\"button\" label=\"Yes\" icon=\"pi pi-check\" onClick={() => setDisplayConfirmation(false)} className=\"p-button-text\" autoFocus />\r\n        </>\r\n    );\r\n    const [visibleRight, setVisibleRight] = useState(false);\r\n    const [dropdownItem, setDropdownItem] = useState(null);\r\n    const dropdownItems = [\r\n        { name: 'Male', code: 'option 1' },\r\n        { name: 'Female', code: 'option 2' }\r\n    ];\r\n    const toast = useRef(null);\r\n    const accept = () => {\r\n        toast.current.show({ severity: 'info', summary: 'Confirmed', detail: 'You have accepted', life: 3000 });\r\n    };\r\n\r\n    const reject = () => {\r\n        toast.current.show({ severity: 'warn', summary: 'Rejected', detail: 'You have rejected', life: 3000 });\r\n    };\r\n\r\n    const confirm1 = (event) => {\r\n        confirmPopup({\r\n            target: event.currentTarget,\r\n            message: 'Are you sure you want to proceed?',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept,\r\n            reject\r\n        });\r\n    }\r\n    return (\r\n        <div className='flex flex-column gap-2'>\r\n            <div class=\"flex justify-content-end flex-wrap card-container green-container\">\r\n                <Button type=\"button\" label=\"Back\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'amber', marginLeft: '90%', marginBottom: '18%' }}></Button>\r\n            </div>\r\n\r\n            <div className='grid ' style={{ backgroundColor: \"white\" }}>\r\n                <div className=\"col-12 lg:col-6 xl:col-6\"  >\r\n                    <div style={{ width: '250%' }}>\r\n                        <InputText id=\"firstname1\" type=\"text\" placeholder=\"Enter any information about a user\" style={{ width: '40%' }} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button label=\"Search\" icon=\"pi pi-search\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'amber' }}></Button>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button type=\"button\" label=\"Export\" icon=\"pi pi-arrow-circle-up\" onClick={() => { navigate(\"/AddUser\") }} style={{ backgroundColor: \"amber\" }} />\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button type=\"button\" label=\"Add New\" icon=\"pi pi-plus\" onClick={() => setDisplayBasic(true)} style={{ backgroundColor: \"deep purple\" }} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                <Dialog header=\"New User\" visible={displayBasic} style={{ width: '70vw' }} onHide={() => setDisplayBasic(false)}  >\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"p-fluid formgrid grid\">\r\n                                <div className=\"field col-4\">\r\n                                    <label for=\"clientid\">Username</label>\r\n                                    <input id=\"clientid\" type=\"text\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\" />\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-4\">\r\n                                    <label for=\"clientname\">First Name</label>\r\n                                    <input id=\"clientname\" type=\"text\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\" />\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-4\">\r\n                                    <label for=\"location\">Last Name</label>\r\n                                    <input id=\"location\" type=\"text\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\" />\r\n                                </div>\r\n                                <div className=\"field col-6\">\r\n                                    <label for=\"location\">Email Address</label>\r\n                                    <input id=\"location\" type=\"text\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\" />\r\n                                </div>\r\n                                <div className=\"field col-6\">\r\n                                    <label for=\"contact\">Contact Number</label>\r\n                                    <input id=\"contact\" type=\"text\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\" />\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-4\">\r\n                                    <label htmlFor=\"state\">Gender</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" placeholder=\"Select One\"></Dropdown>\r\n                                </div>\r\n\r\n                                <div className=\"field col-12 md:col-4\">\r\n                                    <label for=\"action\">Password</label>\r\n                                    <input id=\"action\" type=\"text\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\" />\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-4\">\r\n                                    <label for=\"action\">Confirm Password</label>\r\n                                    <input id=\"action\" type=\"text\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\" />\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-12 \">\r\n                                    <label htmlFor=\"firstname2\">Roles</label>\r\n\r\n                                </div>\r\n\r\n                                <div className=\"grid\">\r\n                                    <div className=\"field col-12 md:col-6\">\r\n                                        <div className=\"field-checkbox\">\r\n                                            <Checkbox inputId=\"checkOption1\" name=\"option\" value=\"Chicago\" checked={checkboxValue.indexOf('Chicago') !== -1} onChange={onCheckboxChange} />\r\n                                            <label htmlFor=\"checkOption1\">Export Clients</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 md:col-6\">\r\n                                        <div className=\"field-checkbox\">\r\n                                            <Checkbox inputId=\"checkOption2\" name=\"option\" value=\"Los Angeles\" checked={checkboxValue.indexOf('Los Angeles') !== -1} onChange={onCheckboxChange} />\r\n                                            <label htmlFor=\"checkOption2\">Edit Clients</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 md:col-6\">\r\n                                        <div className=\"field-checkbox\">\r\n                                            <Checkbox inputId=\"checkOption3\" name=\"option\" value=\"New York\" checked={checkboxValue.indexOf('New York') !== -1} onChange={onCheckboxChange} />\r\n                                            <label htmlFor=\"checkOption3\">Delete Clients</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 md:col-6\">\r\n                                        <div className=\"field-checkbox\">\r\n                                            <Checkbox inputId=\"checkOption3\" name=\"option\" value=\"New York\" checked={checkboxValue.indexOf('New York') !== -1} onChange={onCheckboxChange} />\r\n                                            <label htmlFor=\"checkOption3\">View Clients</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"flex justify-content-center \" >\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Save\" icon=\"pi pi-save\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'green', borderBlockColor: 'green' }}></Button>\r\n                            </div>\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'red', borderBlockColor: 'red' }}></Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n            <Sidebar visible={visibleRight} onHide={() => setVisibleRight(false)} baseZIndex={1000} position=\"right\">\r\n                <h1 style={{ fontWeight: 'normal' }}>Profile</h1>\r\n                <div className='profile'>\r\n                    <img src=\"assets/layout/images/avatar.png\" alt=\"babylon-layout\" />\r\n                    <span className=\"layout-profile-name\">Administrator</span>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-2'>\r\n                        <b><h5>Profile Details</h5></b>\r\n                    </div>\r\n                    <div className='col-4'>\r\n                        <h7>Full Name:</h7>\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <h7>Email address:</h7>\r\n                    </div>\r\n                    <div className='col-8'>\r\n                        <h7>Phone number:</h7>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-2'>\r\n                        <b><h5>Client Stats</h5></b>\r\n                    </div>\r\n                    <div className='col-4'>\r\n                        <h7>Total Clients:</h7>\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <h7>This week:</h7>\r\n                    </div>\r\n                    <div className='col-8'>\r\n                        <h7>Today:</h7>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                    <div className='col-2'>\r\n                        <b><h5>Communications</h5></b>\r\n                    </div>\r\n                    <div className='col-4'>\r\n                        <h7>Total:</h7>\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <h7>Conversion rate:</h7>\r\n                    </div>\r\n                    <div className='col-8'>\r\n                        <h7>This week</h7>\r\n                    </div>\r\n\r\n                </div>\r\n            </Sidebar>\r\n\r\n\r\n\r\n            <><h5>System Users</h5>\r\n                <DataTable value={data} paginator rows={5} className=\"p-datatable-products\">\r\n                    <Column field=\"id\" header=\"No.\" style={{ flexGrow: 1, flexBasis: '160px' }} frozen></Column>\r\n                    <Column field=\"image\" header=\"Image\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\r\n                    <Column field=\"first_name\" header=\"Full Name\" style={{ flexGrow: 1, flexBasis: '200px' }}></Column>\r\n                    <Column field=\"username\" header=\"Username\" style={{ flexGrow: 1, flexBasis: '200px' }}></Column>\r\n                    <Column field=\"added\" header=\"AddedBy\" style={{ flexGrow: 1, flexBasis: '200px' }}></Column>\r\n                    <Column field=\"action\" className='flex gap-2' header=\"Action\" style={{ flexGrow: 1, flexBasis: '200px' }} body={() => <><><><Button type=\"button\" icon=\"pi pi-pencil\" onClick={() => setDisplayBasic(true)} style={{ backgroundColor: \"#239B47\" }}></Button></><Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={() => setDisplayConfirmation(true)}></Button></><Button type=\"button\" icon=\"pi pi-eye\" className=\"p-button-danger\" onClick={() => setVisibleRight(true)}></Button></>}></Column>\r\n                </DataTable>\r\n                <Dialog header=\"Confirmation\" visible={displayConfirmation} onHide={() => setDisplayConfirmation(false)} style={{ width: '350px' }} modal footer={confirmationDialogFooter}>\r\n                    <div className=\"flex align-items-center justify-content-center\">\r\n                        <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\r\n                        {(\r\n                            <span>Are you sure you want to delete <b>{data.name}</b>?</span>\r\n                        )}\r\n                    </div>\r\n                </Dialog>\r\n            </>\r\n        </div>\r\n\r\n    );\r\n};\r\nexport default SystemUsers;\r\n","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\Roles.js",["174"],[],"import { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport React, { useState } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Button } from 'primereact/button';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport data from '../assets/flags/Roles.json';\r\nimport { Checkbox } from 'primereact/checkbox';\r\n\r\nconst Roles = () => {\r\n\r\n\r\n    const [displayBasic, setDisplayBasic] = useState(false);\r\n    const [checkboxValue, setCheckboxValue] = useState([]);\r\n    const [displayConfirmation, setDisplayConfirmation] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const confirmationDialogFooter = (\r\n        <>\r\n            <Button type=\"button\" label=\"No\" icon=\"pi pi-times\" onClick={() => setDisplayConfirmation(false)} className=\"p-button-text\" />\r\n            <Button type=\"button\" label=\"Yes\" icon=\"pi pi-check\" onClick={() => setDisplayConfirmation(false)} className=\"p-button-text\" autoFocus />\r\n        </>\r\n    );\r\n    const onCheckboxChange = (e) => {\r\n        let selectedValue = [...checkboxValue];\r\n        if (e.checked) selectedValue.push(e.value);\r\n        else selectedValue.splice(selectedValue.indexOf(e.value), 1);\r\n\r\n        setCheckboxValue(selectedValue);\r\n    };\r\n    return (\r\n        <><div class=\"flex justify-content-end flex-wrap card-container green-container\">\r\n            <Button type=\"button\" label=\"Back\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'deep purple', marginLeft: '90%', marginBottom: '18%' }}></Button>\r\n        </div>\r\n            <div className='grid ' style={{ backgroundColor: \"white\" }}>\r\n                <div className=\"col-12 lg:col-6 xl:col-6\"  >\r\n                    <div style={{ width: '250%' }}>\r\n                        <InputText id=\"firstname1\" type=\"text\" placeholder=\"Enter any information about a user\" style={{ width: '40%' }} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button label=\"Search\" icon=\"pi pi-search\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'deep purple' }}></Button>\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button type=\"button\" label=\"Export\" icon=\"pi pi-arrow-circle-up\" onClick={() => { navigate(\"/AddUser\") }} style={{ backgroundColor: \"deep purple\" }} />\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button type=\"button\" label=\"Add New\" icon=\"pi pi-plus\" onClick={() => setDisplayBasic(true)} style={{ backgroundColor: \"deep purple\" }} />\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                <Dialog header=\"New Role\" visible={displayBasic} style={{ width: '50vw' }} onHide={() => setDisplayBasic(false)}  >\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"p-fluid formgrid grid\">\r\n                                <div className=\"field col-12 md:col-12 \">\r\n                                    <label htmlFor=\"firstname2\">Name</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n\r\n                                <div className=\"field col-12\">\r\n                                    <label htmlFor=\"firstname2\">Description</label>\r\n                                    <textarea id=\"address\" type=\"text\" rows=\"4\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"></textarea>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-12 \">\r\n                                    <label htmlFor=\"firstname2\">Permissions</label>\r\n\r\n                                </div>\r\n                                <div className=\"grid\">\r\n                                    <div className=\"col-12 md:col-6\">\r\n                                        <div className=\"field-checkbox\">\r\n                                            <Checkbox inputId=\"checkOption1\" name=\"option\" value=\"Chicago\" checked={checkboxValue.indexOf('Chicago') !== -1} onChange={onCheckboxChange} />\r\n                                            <label htmlFor=\"checkOption1\">Export Clients</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 md:col-6\">\r\n                                        <div className=\"field-checkbox\">\r\n                                            <Checkbox inputId=\"checkOption2\" name=\"option\" value=\"Los Angeles\" checked={checkboxValue.indexOf('Los Angeles') !== -1} onChange={onCheckboxChange} />\r\n                                            <label htmlFor=\"checkOption2\">Edit Clients</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 md:col-6\">\r\n                                        <div className=\"field-checkbox\">\r\n                                            <Checkbox inputId=\"checkOption3\" name=\"option\" value=\"New York\" checked={checkboxValue.indexOf('New York') !== -1} onChange={onCheckboxChange} />\r\n                                            <label htmlFor=\"checkOption3\">Delete Clients</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 md:col-6\">\r\n                                        <div className=\"field-checkbox\">\r\n                                            <Checkbox inputId=\"checkOption3\" name=\"option\" value=\"New York\" checked={checkboxValue.indexOf('New York') !== -1} onChange={onCheckboxChange} />\r\n                                            <label htmlFor=\"checkOption3\">View Clients</label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"flex justify-content-center \" >\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Save\" icon=\"pi pi-save\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'green', borderBlockColor: 'green' }}></Button>\r\n                            </div>\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'red', borderBlockColor: 'red' }}></Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div >\r\n            <><h5>Roles</h5>\r\n                <DataTable value={data}>\r\n                    <Column field=\"No\" header=\"No.\" style={{ flexGrow: 1, flexBasis: '160px' }} frozen></Column>\r\n                    <Column field=\"Role\" header=\"Role\" style={{ flexGrow: 1, flexBasis: '100px' }}></Column>\r\n                    <Column field=\"description\" header=\"Description\" style={{ flexGrow: 1, flexBasis: '200px' }}></Column>\r\n                    <Column field=\"permissions\" header=\"Permissions\" style={{ flexGrow: 1, flexBasis: '200px' }}></Column>\r\n                    <Column field=\"action\" className='flex gap-2' header=\"Action\" style={{ flexGrow: 1, flexBasis: '200px' }} body={() => <><><Button type=\"button\" icon=\"pi pi-pencil\" onClick={() => setDisplayBasic(true)} style={{ backgroundColor: \"#239B47\" }}></Button></><Button type=\"button\" icon=\"pi pi-trash\" className=\"p-button-danger\" onClick={() => setDisplayConfirmation(true)}></Button></>}></Column>\r\n                </DataTable>\r\n                <Dialog header=\"Confirmation\" visible={displayConfirmation} onHide={() => setDisplayConfirmation(false)} style={{ width: '350px' }} modal footer={confirmationDialogFooter}>\r\n                    <div className=\"flex align-items-center justify-content-center\">\r\n                        <i className=\"pi pi-exclamation-triangle mr-3\" style={{ fontSize: '2rem' }} />\r\n                        {(\r\n                            <span>Are you sure you want to delete <b>{data.name}</b>?</span>\r\n                        )}\r\n                    </div>\r\n                </Dialog>\r\n            </></>\r\n\r\n    );\r\n};\r\nexport default Roles;\r\n","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\MenuDemo.js",["175","176"],[],"import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { TabMenu } from 'primereact/tabmenu';\r\nimport { Route, Routes, useNavigate, useLocation } from 'react-router-dom';\r\nimport PersonalDemo from '../components/menu/PersonalDemo';\r\nimport ConfirmationDemo from '../components/menu/ConfirmationDemo';\r\nimport PaymentDemo from '../components/menu/PaymentDemo';\r\nimport SeatDemo from '../components/menu/SeatDemo';\r\nimport Cases from './Cases';\r\nimport CaseDemo from '../components/menu/CaseDemo';\r\n\r\nconst MenuDemo = () => {\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const checkActiveIndex = useCallback(() => {\r\n        const paths = location.pathname.split('/');\r\n        const currentPath = paths[paths.length - 1];\r\n\r\n        switch (currentPath) {\r\n            case 'seat':\r\n                setActiveIndex(1);\r\n                break;\r\n            case 'payment':\r\n                setActiveIndex(2);\r\n                break;\r\n            case 'confirmation':\r\n                setActiveIndex(3);\r\n                break;\r\n            case 'case':\r\n                setActiveIndex(4);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        checkActiveIndex();\r\n    }, [checkActiveIndex]);\r\n\r\n    const wizardItems = [\r\n        { label: 'Company Information', command: () => navigate('/menu') },\r\n        { label: 'Contact Person Information', command: () => navigate('/menu/seat') },\r\n        { label: 'Product Lines', command: () => navigate('/menu/payment') },\r\n        { label: 'Communications', command: () => navigate('/menu/confirmation') },\r\n        { label: 'Cases', command: () => navigate('/menu/case') }\r\n    ];\r\n\r\n\r\n    return (\r\n        <div className=\"grid p-fluid\">\r\n\r\n            <div className=\"col-12 md:col-12\">\r\n                <div className=\"card card-w-title\">\r\n                    \r\n                    <TabMenu model={wizardItems} activeIndex={activeIndex} onTabChange={(e) => setActiveIndex(e.index)} />\r\n                    <Routes>\r\n                        <Route exact path={'/'} element={<PersonalDemo />} />\r\n                        <Route path={'/confirmation'} element={<ConfirmationDemo />} />\r\n                        <Route path={'/payment'} element={<PaymentDemo />} />\r\n                        <Route path={'/seat'} element={<SeatDemo />} />\r\n                        <Route path={'/case'} element={<CaseDemo />} />\r\n                    </Routes>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuDemo;\r\n ","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\ViewCase.js",["177","178","179","180","181"],[],"import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { Card } from 'primereact/card';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\n\r\n\r\nconst ViewCase = () => {\r\n\r\n    return (\r\n        <><div className=\"grid\" style={{ backgroundColor: 'white', marginBottom: '2%' }}>\r\n            <div className=\"col-12 lg:col-6 xl:col-4\">\r\n                <div className=\"card\">\r\n                    <Card title=\"Case No: TP-6839\">\r\n                        <p className=\"m-0\">\r\n                            Date Reported: 16/08/2023\r\n                        </p>\r\n                        <p>By: Shamira Naiga</p>\r\n                        <h3 style={{ textAlign: 'center', fontWeight: 'bolder' }}>NEW</h3>\r\n                    </Card>\r\n                    <p>Case Details</p>\r\n                    <p>Attachments</p>\r\n                    <p>Case Notes</p>\r\n                    <p>Logs</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-12 lg:col-6 xl:col-8\">\r\n                <div className=\"card\">\r\n\r\n                    <Button label=\"In Progress\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'gray', borderBlockColor: 'gray' }} ></Button>\r\n                    <Button label=\"Escalate\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'gray', borderBlockColor: 'gray' }}></Button>\r\n                    <Button label=\"Oh Hold\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'gray', borderBlockColor: 'gray' }}></Button>\r\n                    <Button label=\"Close\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'gray', borderBlockColor: 'gray' }}></Button>\r\n\r\n                    <Card title=\"Case Details\">\r\n                        <p className=\"m-0\">\r\n                            Lorem ipsum dolor sit amet, consectetur adipisicing elit. </p>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div></>\r\n    );\r\n};\r\nexport default ViewCase;","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\components\\menu\\CaseDemo.js",["182","183","184","185"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { Button } from 'primereact/button';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { Link } from 'react-router-dom';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Dropdown } from 'primereact/dropdown';\r\n\r\nconst CaseDemo = () => {\r\n\r\n    const [displayBasic, setDisplayBasic] = useState(false);\r\n    const [display, setDisplay] = useState(false);\r\n    const [basic, setBasic] = useState(false);\r\n    const [dropdownItem, setDropdownItem] = useState(null);\r\n    const dropdownItems = [\r\n        { name: 'Male', code: 'option 1' },\r\n        { name: 'Female', code: 'option 2' }\r\n    ];\r\n\r\n    return (\r\n\r\n        <div className=\"layout-dashboard\" >\r\n            <div class=\"flex justify-content-end flex-wrap card-container indigo-container\" style={{ backgroundColor: 'white', marginTop:'2%' }}>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button label=\"New Case\" icon=\"pi pi-plus\" className=\" p-button-text mr-2 mb-2\" style={{ backgroundColor: 'deep purple', alignContent: 'end' }} />\r\n\r\n                </div>\r\n                <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                    <Button label=\"New Case Note\" icon=\"pi pi-plus\" className=\" p-button-text mr-2 mb-2\" style={{ backgroundColor: 'deep purple', alignContent: 'end' }} />\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                <Dialog header=\"New Case Note\" visible={basic} style={{ width: '60vw' }} onHide={() => setDisplayBasic(false)}  >\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"p-fluid formgrid grid\">\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Case Name</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Status</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" placeholder=\"Select One\"></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12\">\r\n                                    <label htmlFor=\"firstname2\">Description</label>\r\n                                    <textarea id=\"address\" type=\"text\" rows=\"4\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"></textarea>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"flex justify-content-center \" >\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Save\" icon=\"pi pi-save\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'green', borderBlockColor: 'green' }}></Button>\r\n                            </div>\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'red', borderBlockColor: 'red' }}></Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div >\r\n            <div className=\"col-12 lg:col-6 xl:col-2\" >\r\n                <Dialog header=\"New Case \" visible={display} style={{ width: '60vw' }} onHide={() => setDisplay(false)}  >\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n\r\n                            <div className=\"p-fluid formgrid grid\">\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Case Number</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Subject</label>\r\n                                    <InputText id=\"firstname2\" type=\"text\" />\r\n                                </div>\r\n                                <div className=\"field col-12\">\r\n                                    <label htmlFor=\"firstname2\">Description</label>\r\n                                    <textarea id=\"address\" type=\"text\" rows=\"4\" class=\"text-base text-color surface-overlay p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"></textarea>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Case Type</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Assigned To</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Escalated To</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Status</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\"></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Case Origin</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6 \">\r\n                                    <label htmlFor=\"firstname2\">Reported by</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-12 md:col-6\">\r\n                                    <label htmlFor=\"state\">Client Account</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n                                <div className=\"field col-6\">\r\n                                    <label htmlFor=\"firstname2\">Contact Person</label>\r\n                                    <Dropdown id=\"state\" value={dropdownItem} onChange={(e) => setDropdownItem(e.value)} options={dropdownItems} optionLabel=\"name\" ></Dropdown>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"flex justify-content-center \" >\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Save\" icon=\"pi pi-save\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'green', borderBlockColor: 'green' }}></Button>\r\n                            </div>\r\n                            <div className=\"field col-12 md:col-6\" >\r\n                                <Button label=\"Cancel\" icon=\"pi pi-times\" className=\"mr-2 mb-2\" style={{ backgroundColor: 'red', borderBlockColor: 'red' }}></Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Dialog>\r\n            </div >\r\n            <div className=\"grid\" style={{ justifyContent: 'space-evenly' }}>\r\n                <div className=\"col-12 xl:col-12\">\r\n                    <div className=\"card card-w-title global-sales\" >\r\n                        <DataTable paginator rows={5} className=\"p-datatable-products\">\r\n                            <Column field=\"case_number\" header=\"Case No.\" ></Column>\r\n                            <Column field=\"subject\" header=\"Subject\" ></Column>\r\n                            <Column field=\"description\" header=\"Description\" ></Column>\r\n                            <Column field=\"type\" header=\"Case Type\" ></Column>\r\n                            <Column field=\"status\" header=\"Status\" ></Column>\r\n                            <Column field=\"priority\" header=\"Priority\" ></Column>\r\n                            <Column field=\"options\" header=\"Actions\" body={<><Link to={\"/ViewCase\"} style={{ color: 'green' }}>View</Link><p></p></>} >\r\n\r\n                            </Column>\r\n                        </DataTable>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    );\r\n};\r\nexport default CaseDemo;","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\components\\menu\\PersonalDemo.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\components\\menu\\ConfirmationDemo.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\components\\menu\\PaymentDemo.js",["186","187","188"],[],"import { Route, Routes, useNavigate, useLocation } from 'react-router-dom';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { Steps } from 'primereact/steps';\r\nimport { Card } from 'primereact/card';\r\n\r\nconst PaymentDemo = () => {\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const checkActiveIndex = useCallback(() => {\r\n        const paths = location.pathname.split('/');\r\n        const currentPath = paths[paths.length - 1];\r\n\r\n        switch (currentPath) {\r\n            case 'seat':\r\n                setActiveIndex(1);\r\n                break;\r\n            case 'payment':\r\n                setActiveIndex(2);\r\n                break;\r\n            case 'confirmation':\r\n                setActiveIndex(3);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        checkActiveIndex();\r\n    }, [checkActiveIndex]);\r\n\r\n    const wizardItems = [\r\n        { label: 'Lead', command: () => navigate('/menu') },\r\n        { label: 'Prospect', command: () => navigate('/menu') },\r\n        { label: 'Full Client', command: () => navigate('/menu') }\r\n\r\n    ];\r\n    return (\r\n        <div className=\"col-12 md:col-12\">\r\n            <div className=\"card card-w-title\">\r\n\r\n                <Steps model={wizardItems} activeIndex={activeIndex} onSelect={(e) => setActiveIndex(e.index)} readOnly={false} />\r\n                {/* <Routes>\r\n                        <Route exact path={'/'} element={<PersonalDemo />} />\r\n                    </Routes> */}\r\n                <div className=\"grid\" style={{ backgroundColor: 'white', marginBottom: '2%' }}>\r\n                    <div className=\"col-12 lg:col-6 xl:col-4\">\r\n                        <div className=\"card\">\r\n                            <Card >\r\n                                <p className=\"m-0\">\r\n                                Lead created on:\r\n                                16/08/2023\r\n                                </p>\r\n                                <p>By: Shamira Naiga</p>\r\n                                <h5 style={{ textAlign: 'center', fontWeight: 'bold' }}> Status: COMPLETED</h5>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 lg:col-6 xl:col-4\">\r\n                        <div className=\"card\">\r\n                            <Card>\r\n                                <p className=\"m-0\" style={{fontWeight:'unset'}}>\r\n                                   Prospect created on: \r\n                                </p>\r\n                                <p>By:</p>\r\n                                <h5 style={{ textAlign: 'center', fontWeight: 'bold' }}>Status: CONDITION NOT MET</h5>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 lg:col-6 xl:col-4\">\r\n                        <div className=\"card\">\r\n                            <Card>\r\n                            <p className=\"m-0\" style={{fontWeight:'unset'}}>\r\n                                   Full Client created on: \r\n                                </p>\r\n                                <p>By:</p>\r\n                                <h5 style={{ textAlign: 'center', fontWeight: 'bold' }}>Status: CONDITION NOT MET</h5>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PaymentDemo;","C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\components\\menu\\SeatDemo.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\InformationBank.js",["189","190","191"],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\LogOut.js",[],[],"C:\\Users\\mac\\Documents\\GitHub\\Banuti_Ranch\\src\\pages\\AnimalChart.js",[],[],{"ruleId":"192","severity":1,"message":"193","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":21},{"ruleId":"192","severity":1,"message":"196","line":14,"column":8,"nodeType":"194","messageId":"195","endLine":14,"endColumn":15},{"ruleId":"192","severity":1,"message":"197","line":15,"column":8,"nodeType":"194","messageId":"195","endLine":15,"endColumn":13},{"ruleId":"192","severity":1,"message":"198","line":16,"column":8,"nodeType":"194","messageId":"195","endLine":16,"endColumn":13},{"ruleId":"192","severity":1,"message":"199","line":17,"column":8,"nodeType":"194","messageId":"195","endLine":17,"endColumn":13},{"ruleId":"192","severity":1,"message":"200","line":24,"column":8,"nodeType":"194","messageId":"195","endLine":24,"endColumn":19},{"ruleId":"192","severity":1,"message":"201","line":25,"column":8,"nodeType":"194","messageId":"195","endLine":25,"endColumn":16},{"ruleId":"192","severity":1,"message":"202","line":26,"column":8,"nodeType":"194","messageId":"195","endLine":26,"endColumn":16},{"ruleId":"192","severity":1,"message":"203","line":27,"column":8,"nodeType":"194","messageId":"195","endLine":27,"endColumn":16},{"ruleId":"192","severity":1,"message":"204","line":38,"column":12,"nodeType":"194","messageId":"195","endLine":38,"endColumn":28},{"ruleId":"192","severity":1,"message":"205","line":129,"column":9,"nodeType":"194","messageId":"195","endLine":129,"endColumn":13},{"ruleId":"192","severity":1,"message":"206","line":219,"column":11,"nodeType":"194","messageId":"195","endLine":219,"endColumn":28},{"ruleId":"192","severity":1,"message":"207","line":245,"column":11,"nodeType":"194","messageId":"195","endLine":245,"endColumn":34},{"ruleId":"192","severity":1,"message":"208","line":254,"column":11,"nodeType":"194","messageId":"195","endLine":254,"endColumn":28},{"ruleId":"209","severity":1,"message":"210","line":20,"column":13,"nodeType":"211","endLine":20,"endColumn":87},{"ruleId":"209","severity":1,"message":"210","line":35,"column":17,"nodeType":"211","endLine":35,"endColumn":102},{"ruleId":"192","severity":1,"message":"212","line":7,"column":11,"nodeType":"194","messageId":"195","endLine":7,"endColumn":19},{"ruleId":"192","severity":1,"message":"213","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"214","line":1,"column":38,"nodeType":"194","messageId":"195","endLine":1,"endColumn":44},{"ruleId":"192","severity":1,"message":"215","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":25},{"ruleId":"192","severity":1,"message":"213","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"214","line":1,"column":38,"nodeType":"194","messageId":"195","endLine":1,"endColumn":44},{"ruleId":"192","severity":1,"message":"213","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"214","line":1,"column":38,"nodeType":"194","messageId":"195","endLine":1,"endColumn":44},{"ruleId":"192","severity":1,"message":"201","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":16},{"ruleId":"192","severity":1,"message":"216","line":49,"column":11,"nodeType":"194","messageId":"195","endLine":49,"endColumn":19},{"ruleId":"192","severity":1,"message":"217","line":6,"column":10,"nodeType":"194","messageId":"195","endLine":6,"endColumn":21},{"ruleId":"192","severity":1,"message":"214","line":1,"column":41,"nodeType":"194","messageId":"195","endLine":1,"endColumn":47},{"ruleId":"192","severity":1,"message":"198","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":13},{"ruleId":"192","severity":1,"message":"218","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":28},{"ruleId":"192","severity":1,"message":"213","line":1,"column":30,"nodeType":"194","messageId":"195","endLine":1,"endColumn":39},{"ruleId":"192","severity":1,"message":"214","line":1,"column":41,"nodeType":"194","messageId":"195","endLine":1,"endColumn":47},{"ruleId":"192","severity":1,"message":"215","line":1,"column":49,"nodeType":"194","messageId":"195","endLine":1,"endColumn":57},{"ruleId":"192","severity":1,"message":"219","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":19},{"ruleId":"192","severity":1,"message":"213","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"214","line":1,"column":38,"nodeType":"194","messageId":"195","endLine":1,"endColumn":44},{"ruleId":"192","severity":1,"message":"220","line":12,"column":12,"nodeType":"194","messageId":"195","endLine":12,"endColumn":24},{"ruleId":"192","severity":1,"message":"221","line":14,"column":19,"nodeType":"194","messageId":"195","endLine":14,"endColumn":27},{"ruleId":"192","severity":1,"message":"222","line":1,"column":10,"nodeType":"194","messageId":"195","endLine":1,"endColumn":15},{"ruleId":"192","severity":1,"message":"223","line":1,"column":17,"nodeType":"194","messageId":"195","endLine":1,"endColumn":23},{"ruleId":"192","severity":1,"message":"214","line":2,"column":41,"nodeType":"194","messageId":"195","endLine":2,"endColumn":47},{"ruleId":"192","severity":1,"message":"224","line":3,"column":10,"nodeType":"194","messageId":"195","endLine":3,"endColumn":21},{"ruleId":"192","severity":1,"message":"225","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":19},{"ruleId":"192","severity":1,"message":"226","line":4,"column":21,"nodeType":"194","messageId":"195","endLine":4,"endColumn":33},"no-unused-vars","'AppBreadcrumb' is defined but never used.","Identifier","unusedVar","'Clients' is defined but never used.","'Roles' is defined but never used.","'Cases' is defined but never used.","'Users' is defined but never used.","'SystemUsers' is defined but never used.","'MenuDemo' is defined but never used.","'ViewCase' is defined but never used.","'CaseDemo' is defined but never used.","'topbarMenuActive' is assigned a value but never used.","'meta' is assigned a value but never used.","'onMenuButtonClick' is assigned a value but never used.","'onTopbarMenuButtonClick' is assigned a value but never used.","'onTopbarItemClick' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'navigate' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'confirm1' is assigned a value but never used.","'RadioButton' is defined but never used.","'useCallback' is defined but never used.","'InputText' is defined but never used.","'displayBasic' is assigned a value but never used.","'setBasic' is assigned a value but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'ScrollPanel' is defined but never used.","'Accordion' is defined but never used.","'AccordionTab' is defined but never used."]